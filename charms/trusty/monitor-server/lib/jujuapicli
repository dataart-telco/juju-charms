#!/usr/bin/python 

#
# Copyright 2014 Canonical Ltd.
#
# Authors:
#  Nicolas Thomas 
#
from jujuclient import Environment
import yaml
import argparse
import json
import pprint

#Option parsing
parser = argparse.ArgumentParser(description="add-unit or remove unit of a certain service")
parser.add_argument('-c', action="store", dest="conffile", default='.jujuapi.yaml')
parser.add_argument('choice', choices=['add-unit', 'remove-unit', 'scale-down', 'print-env'])
parser.add_argument("charm", help="the charm or charm name")
args = parser.parse_args()

with open(args.conffile, 'r') as f:
    conf = yaml.load(f)

env = Environment(conf["juju-api"]["endpoint"])
env.login(conf["juju-api"]["admin-secret"])
#watcher = env.watch()
watcher = env.get_watch(timeout=3)

##print env.info()['Services'][args.charm]['Units']

if args.choice=='add-unit':
    service = env.get_stat()['services'][args.charm]['units']
    isPending = False
    for s in service.itervalues():
        if s['agent-state'] == 'pending' or (s['agentstatus'] is not None and s['agentstatus']['Current'] != 'idle'):
            isPending = True
            break

    if isPending :
        print "Ignore scale " + args.charm + "; it has pending units"
    else:
        env.add_units(args.charm)
elif args.choice=='remove-unit':
    env.remove_units([args.charm])
elif args.choice=='scale-down':
    units = env.get_stat()['services'][args.charm]['units'].keys()
    count = len(units)
    if count > 1 :
        unit = units[0]
        env.remove_units([unit])
        print "remove :" + unit
    else:
        print "No need to scale. have only " + count + " unit"

elif args.choice=='print-env':
    pprint.pprint(env.get_stat()['services'][args.charm])
